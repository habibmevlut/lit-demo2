{"version":3,"file":"user-info.js","sourceRoot":"","sources":["../../../src/feed/user-info.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAI5D,IAAM,QAAQ,GAAd,MAAM,QAAS,SAAQ,UAAU;IAAjC;;QAmBH,QAAG,GAAG,EAAE,CAAC;QAID,WAAM,GAAuB,EAAC,KAAK,EAAE,EAAE,EAAC,CAAC;IAmCrD,CAAC;IAjCY,iBAAiB;QACtB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAEQ,MAAM;QACX,OAAO,IAAI,CAAA,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK;aACtB,GAAG,CAAC,IAAI,CAAC,EAAE;;YACR,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC;YAChC,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;YACpD,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;YAClC,MAAM,MAAM,GAAG,MAAM,IAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,CAAA,GAAG,IAAI,IAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,QAAQ,CAAA,GAAG,eAAe,IAAG,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,0CAAE,IAAI,CAAA,GAAG,kCAAkC,IAAG,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,0CAAE,OAAO,CAAA,CAAA;YACrK,OAAO,IAAI,CAAA;;2CAEY,MAAM;8CACH,SAAS;iDACN,YAAY;yCACpB,IAAI;2CACF,MAAM;;;qBAG5B,CAAC;QACN,CAAC,CAAC;SACT,CAAC;IACN,CAAC;IAEO,KAAK,CAAC,aAAa;QACvB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACrB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC;QAClC,MAAM,IAAI,GAAG,CAAC,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAiB,CAAC;QACrD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,EAAC,KAAK,EAAC,CAAC;IAC1B,CAAC;;AAxDe,eAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;KAgB3B,CAAC;AAEF;IADC,QAAQ,EAAE;qCACF;AAIT;IADC,KAAK,EAAE;wCACyC;AAvBxC,QAAQ;IADpB,aAAa,CAAC,WAAW,CAAC;GACd,QAAQ,CA0DpB;SA1DY,QAAQ","sourcesContent":["import { html, css, LitElement } from \"lit\";\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { IUser } from \"./user-info.model\";\n\n@customElement('user-info')\nexport class UserInfo extends LitElement {\n    static override styles = css`\n      :host {\n        display: flex;\n        flex-direction: column;\n      }\n\n      user-card {\n        cursor: pointer;\n        --user-card-height: var(--user-card-height);\n        --user-card-border: var(--user-card-border);\n        --user-card-border-radius: var(--user-card-border-radius);\n        --user-card-background-color: var(--user-card-background-color);\n        --user-card-header-color: var(--user-card-header-color);\n        --user-card-body-color: var(--user-card-body-color);\n        --user-card-footer-color: var(--user-card-footer-color);\n      }\n    `;\n    @property()\n    url = '';\n\n\n    @state()\n    private _state: { posts: IUser[] } = {posts: []};\n\n    override connectedCallback() {\n        super.connectedCallback();\n        this.fetchUserData();\n    }\n\n    override render() {\n        return html`${this._state.posts\n                .map(user => {\n                    const profileImage = user.image;\n                    const header = user.firstName + ' ' + user.lastName;\n                    const subHeader = user.university;\n                    const footer = 'The ' + user?.firstName + '  ' + user?.lastName + \"is living in \" + user?.address?.city + ' city and the detail address is ' + user?.address?.address\n                    return html`\n                        <user-card\n                                .header=\"${header}\"\n                                .subHeader=\"${subHeader}\"\n                                .profileImage=\"${profileImage}\"\n                                .body=\"${user}\"\n                                .footer=\"${footer}\">\n                        </user-card>\n                        <br>\n                    `;\n                })}\n        `;\n    }\n\n    private async fetchUserData() {\n        const url = this.url;\n        const response = await fetch(url);\n        const json = (await response.json()) as UserResponse;\n        const posts = json.users;\n        this._state = {posts};\n    }\n}\n\ninterface UserResponse {\n    users: IUser[];\n}\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        // @ts-ignore\n        'user-info': UserInfo;\n    }\n}\n"]}